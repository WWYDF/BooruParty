// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum VoteType {
  UPVOTE
  DOWNVOTE
}

model User {
  id            String    @id @default(cuid())
  email         String    @unique
  username      String    @unique
  password      String
  role          String    @default("Member")
  avatar        String?
  
  lastLogin     DateTime  @default(now())
  createdAt     DateTime  @default(now())
}

model Posts {
  id            Int       @id @default(autoincrement())
  fileName      String
  uploadedBy    String
  anonymous     Boolean
  safety        String
  tags          String[]
  sources       String[]
  notes         String?
  flags         String[]

  score         Int         @default(0)
  votes         Vote[]      @relation("PostVotes")
  comments      Comment[]   @relation("PostComments")

  createdAt     DateTime  @default(now())
}

model Vote {
  id        Int      @id @default(autoincrement())
  postId    Int
  userId    String
  type      VoteType
  createdAt DateTime @default(now())

  post      Posts    @relation(fields: [postId], references: [id], name: "PostVotes")

  @@unique([postId, userId])
}

model Comment {
  id         Int       @id @default(autoincrement())
  postId     Int
  authorId   String
  content    String
  createdAt  DateTime  @default(now())
  updatedAt  DateTime  @updatedAt

  post       Posts     @relation(fields: [postId], references: [id], name: "PostComments")
}